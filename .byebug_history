q
exception
exce[tion
n
q
exception
n
q
rows[2]
rows[1]
rows[0]
rows[2][:index]
rows[1][:index]
rows[0][:index]
c
n
q
n
c
q
first_row[:index]
page_path("page1", section_name: "section1")
first_row[:url]
first_row[:description]
n
first_row[:title]
first_row
n
rows.size
row.size
n
rows.class.name
rows
n
assigns(:sections)
c
q
assigns(:q).conditions[0].predicate
assigns(:q).conditions[0]
assigns(:q).conditions[0].predicate
assigns(:q).conditions[0].predicates
assigns(:q).conditions[0].attributes[0].name
assigns(:q).conditions[0].attributes[0].class.name
assigns(:q).conditions[0].attributes[0]
assigns(:q).conditions[0].attributes[0].to_s
assigns(:q).conditions[0].attributes[0]
assigns(:q).conditions[0].attributes.to_s
assigns(:q).conditions[0].attributes
assigns(:q).conditions[0].class.name
assigns(:q).conditions[0]
assigns(:q).conditions[1]
assigns(:q).conditions[0]
assigns(:q).conditions.class.name
assigns(:q).conditions
assigns(:q).conditions.attributes
assigns(:q).conditions
assigns(:q).conditionals
query_params[:q]
assigns(:q)
assigns(:q).params
n
q
section
assigns(:q).result.first
assigns(:q)
q
section
c
n
q
c
q
section
controller_instance.send(:process_section, section)
controller_instance
processed_section
processed_section.image
q
n
processed_section.image
n
q
c
q
@page
Section.all
@page
page
@page
Section.all
@page.section
@page-section
Section.by_content_type(@page.section)
sections.length
n
Section.by_content_type(@page.section)
@page.section
Section.all
Section.by_content_type(@page.section)
@page.section
n
s
n
s
n
s
c
@contents
n
@page
n
s
q
assigns(:page).sections.length
assigns(:page).sections
assigns(:page).class.name
@contents
assigns(:page)
c
assigns(:page)
c
missing_image_path
assigns(:missing_image)
c
assigns(:page)
c
page
assigns(:page)
c
assigns(:page)
q
n
assigns(:page)
expect(assigns(:contents)).to include(section)
expect(assigns(:contents)).to be_an(Array)
assigns(:contents)
q
c
exception
