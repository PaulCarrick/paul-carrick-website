c
admin_users_path
n
c
n
c
shutdown
c
n
@user
n
m
shutdown
show_html
n
c
q
exception
n
c
shutdown
Section.all
section.all
section.save!
section
c
section
Section.all
n
c
Section.all
Sections.all
shutdown
shudown
q
shutdown
q
shutdown
exception
n
q
shutdown
exception
n
shutdown
q
c
n
controller.get_item.image
controller.get_item
controller.methods
controller
get_item.image
c
q
params
q
 @model_class
params[:id]
n
s
q
where
q
e
shutdown
c
q
page_record
page
pretty_print_html(page.body)
c
n
b 34
n
b 30
c
b 30
pretty_print_html(page.bosy)
n
q
rails c
admin_pages_path
q
admin_pages_path
q
shutdown
admin_pages_path
c
n
c
exception
n
@model_class.find(params[:id])
params[:id]
n
s
params
c
n
ImageFile.count
n
ImageFile.count
get_record
n
q
admin_destroy_image_file_path(image_file)
pretty_print_html(page.body)
admin_destroy_image_file_path(image_file)
destroy_image_file_path
admin_image_file_path(image_file)
admin_image_file_path(image_file)}
admin_image_file_path(image_file)}/delete
shutdown
pretty_print_html(page.body)
c
shutdown
pretty_print_html(page.body)
c
q
pretty_print_html(page.body)
exception
n
c
shutdown
pretty_print_html(page.body)
shutdown
pretty_print_html(page.body)
shutdown
pretty_print_html(page.body)
shutdown
pretty_print_html(page.body)
shutdown
shitdown
get_elements_by_contents(page.body, 'Delete')
footer_item_1
find_elements_by_text(page.body, 'Delete')
q
shutdown
shotdown
q
create(:page, label: "Parent Page", footer_order: 1)
shutdown
current_path = URI.parse(current_url).path
id = current_path.split('/').second_to_last # Assuming the ID is part of the path
edit_admin_footer_item_path(1581)
edit_admin_footer_item_path
current_path
c
b 61
l
q
l
FooterItem.count
c
b 59
l
c
b 68
l
get_flash(page.body)
c
b 57
q
get_element_by_id(page.body, "flash")
pretty_print_html(page.body)
get_element_by_contents(page.body, "error")
page.current_path
c
b 57
page.current_path
get_element_by_id(page.body, "footer-order-field")
get_element_by_id(page.body, "footer_item_label")
q
pretty_print_html(page.body)
n
b 58
admin_footer_items_path
c
b 57
n
q
pretty_print_html(page.body)
q
puts html.to_xhtml(indent: 2)
html = Nokogiri::HTML(page.body) 
page.body
q
page.body
exception
n
q
c
b 54
l
n
q
page.body
page.body.include?("fill out")
q
c
b 55
l 55
page.body
q
expect(page).to have_field("footer_item[footer_order]", type: "number")
page.body
page.all(:fillable_field).each { |field|  puts "#{field[:name]}, Type: #{field[:type]}" }
q
exception
n
l
page.all(:fillable_field).each { |field|  puts "#{field[:name]}, Type: #{field[:type]}" }
page.all(:fillable_field).each { |field|  puts field[:name] }
page
have_field("Footer Order*", type: "number")
have_field("Access", type: "text")
q
controller.model_class
self.model_title
self
controller
c
n
q
image_tag(controller.get_item.icon, alt: "Icon", style: "padding-top: 20px")
image_tag(controller.get_item.icon, alt: "Icon", style: "padding-top: 20px;")
image_tag(controller.get_item.icon, alt: "Icon") 
image_tag(controller.get_item.icon, alt: "Icon", style: "padding-top: 20px;") 
n
 controller.get_item.icon
 controller.get_item.ico
c
q
flash[:notice]
flash{:notice]
n
c
BlogPost.count
c
BlogPost.count
c
BlogPost.count
c
n
get_record
n
c
@title
c
title
q
@title
c
title
q
