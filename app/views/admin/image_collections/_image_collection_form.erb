<% content_for :title, "paul-carrick.com - Admin Dashboard - #{@image_collection&.persisted? ? "Edit Image" : "New Image"}" %>
<%= render layout: "layouts/header" do %>
<% end %>

<%= render layout: "layouts/admin_menu" do %>
  <%= form_with(model: @image_collection,
                url: @image_collection&.persisted? ? admin_image_collection_path(@image_collection) : admin_image_collections_path,
                method: @image_collection&.persisted? ? :patch : :post,
                local: true) do |form| %>
    <div class="mb-3">
      <%= form.label :name, "Name*", class: "form-label" %>
      <%= form.text_field :name, class: "form-control", required: true, placeholder: "Enter the name of the image." %>
    </div>

    <div class="mb-3">
      <%= form.label :content_type, "Content Type", class: "form-label" %><br>
      <%= form.text_field :content_type, class: "form-control", placeholder: "Enter the content type of the section." %>
    </div>

    <div class="mb-3">
      <%= form.label :section_name, "Section Name", class: "form-label" %><br>
      <%= form.text_field :section_name, class: "form-control", placeholder: "Enter the section name of the section." %>
    </div>

    <div class="mb-3">
      <%= form.label :section_order, "Section Order", class: "form-label" %>
      <%= form.number_field :section_order,
                            class: "form-control",
                            step: 1, min: 1, max: 999,
                            value: @image_collection.section_order || nil %>
    </div>

    <div class="mb-3">
      <%= form.label :image_files, "Add Image Files", class: "form-label" %>
      <div id="image-file-search">
        <%= text_field_tag :search,
                           nil,
                           class: "form-control",
                           placeholder: "Search for an image file by name..." %>
        <div id="search-results" class="mt-2"></div>
      </div>
    </div>

    <div id="added-files" class="mt-3">
      <!-- Dynamically added files will be listed here -->
    </div>

    <div class="pb-3">
      * - Required Fields
    </div>

    <div class="mb-3">
      <%= form.submit "Save Image Collection", class: "btn btn-primary me-3" %>
      <%= link_to("Cancel", admin_image_collections_url, class: "btn btn-primary") %>
    </div>
  <% end %>
<% end %>

<%= render layout: "layouts/footer" do %>
<% end %>

<script>
  const searchInput = document.querySelector('#image-file-search input[type="text"]');
  const searchResults = document.getElementById('search-results');
  const addedFiles = document.getElementById('added-files');

  // Search functionality
  searchInput.addEventListener('input', function () {
    const query = searchInput.value;
    if (query.length >= 2) {
      fetch(`/api/v1/image_files?q[name_cont]=${encodeURIComponent(query)}`)
        .then(response => response.json())
        .then(data => {
          searchResults.innerHTML = data.map(file => `
              <div class="search-result">
                ${file.name} (${file.mime_type})
                <button class="btn btn-link add-to-collection" data-id="${file.id}" data-name="${file.name}">Add</button>
              </div>
            `).join('');
        });
    } else {
      searchResults.innerHTML = '';
    }
  });

  // Add file to collection (update UI only)
  searchResults.addEventListener('click', function (event) {
    if (event.target.classList.contains('add-to-collection')) {
      const imageFileId = event.target.dataset.id;
      const imageFileName = event.target.dataset.name;

      if (!addedFiles.querySelector(`[data-id="${imageFileId}"]`)) {
        addedFiles.innerHTML += `
            <div class="added-file" data-id="${imageFileId}">
              ${imageFileName}
              <button class="btn btn-link remove-file" data-id="${imageFileId}">Remove</button>
            </div>
          `;
      }
    }
  });

  // Remove file from collection (update UI only)
  addedFiles.addEventListener('click', function (event) {
    if (event.target.classList.contains('remove-file')) {
      const fileElement = event.target.closest('.added-file');
      fileElement.remove();
    }
  });

  // Add hidden inputs for added files on form submission
  const form = document.querySelector('form');
  form.addEventListener('submit', function () {
    // Remove existing hidden inputs to avoid duplicates
    form.querySelectorAll('input[name="image_collection[image_file_ids][]"]').forEach(input => input.remove());

    // Add hidden inputs for all added files
    addedFiles.querySelectorAll('.added-file').forEach(file => {
      const fileId = file.getAttribute('data-id');
      const input = document.createElement('input');
      input.type = 'hidden';
      input.name = 'image_collection[image_file_ids][]';
      input.value = fileId;
      form.appendChild(input);
    });
  });
</script>
