<% if @page.present? %>
  <title><%= "paul-carrick.com - #{@page.title}" %></title>
<% else %>
  <title><%= "paul-carrick.com" %></title>
<% end %>

<%= render layout: "layouts/header" do %>
<% end %>

<% if params[:data].present? %>
  <div class="align-content-center p-5">
    <h1>Welcome <%= params[:data][:name] %>!</h1>
  </div>
<% else %>
  <% @missing_image ||= image_path("missing-image.jpg") %>

  <section class="bg-light text-secondary">
    <div class="container mb-5">
      <p class="alert"><%= alert %></p>

      <div id="contents">
        <% @contents.each do |content| %>
          <% section_classes = content == @focused_section ? 'highlight-section' : '' %>
          <div class="<%= section_classes %>">
            <% if content.image.present? %>
              <% if content.image =~ /\[(.*?)\]/m %>
                <%
                  new_formatting = content.formatting
                  images = Regexp.last_match(1).split(",").map do |image|
                    begin
                      image_path(image.strip)
                    rescue
                      byebug if Rails.env === "development" # rubocop:disable Lint/Debugger
                      @missing_image
                    end
                  end

                  if new_formatting && new_formatting.length > 0
                    formatting_json = JSON.parse(new_formatting)
                    formatting_json["slide_show_images"] = images
                    new_formatting = formatting_json.to_json
                  else
                    new_formatting = { slide_show_images: images }.to_json
                  end
                %>
                <%= react_component("DisplayContent", {
                  content: content.description,
                  image: nil,
                  link: content.link,
                  format: new_formatting,
                  section_id: content.section_name,
                  user: @user
                }) %>
              <% else %>
                <%
                  image = nil

                  if content.image && image !~ /^\s*ImageGroup:.*$/
                    begin
                      image = image_path(content.image)
                    rescue
                      byebug if Rails.env === "development" # rubocop:disable Lint/Debugger
                      image = @missing_image
                    end
                  end
                %>
                <%= react_component("DisplayContent", {
                  content: content.description,
                  image: image,
                  link: content.link,
                  format: content.formatting,
                  section_id: content.section_name,
                  user: @user
                }) %>
              <% end %>
            <% else %>
              <%= react_component("DisplayContent", { content: content.description,
                                                      image: nil,
                                                      link: content.link,
                                                      format: content.formatting,
                                                      section_id: content.section_name,
                                                      user: @user
              }) %>
            <% end %>
          </div>
        <% end %>
      </div>
      <input type="hidden" id="content-rendered-signal" value="true"/>
    </div>
  </section>
<% end %>

<%= render layout: "layouts/footer" do %>
<% end %>

<script>
  function waitForRender() {
    const signalElement = document.getElementById("content-rendered-signal");

    if (signalElement) {
      const params = new URLSearchParams(window.location.search);
      const sectionName = params.get("section_name");

      if (sectionName) {
        const sectionElement = document.getElementById(sectionName);

        if (sectionElement) {
          sectionElement.scrollIntoView({behavior: "smooth", block: "start"});
        }
      }
    } else {
      // Retry after a short delay if the signal element is not yet rendered
      setTimeout(waitForRender, 50);
    }
  }

  window.addEventListener("turbo:load", () => {
    const params = new URLSearchParams(window.location.search);
    const sectionName = params.get("section_name");

    if (sectionName)
      setTimeout(waitForRender, 750);
  });
</script>
