# docker-compose.yml

version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SSL_KEY_PATH: ${SSL_KEY_PATH:-}
        SSL_CERT_PATH: ${SSL_CERT_PATH:-}

    environment:
      SSL_KEY_PATH: ${SSL_KEY_PATH:-/etc/ssl/private/ssl.key}
      SSL_CERT_PATH: ${SSL_CERT_PATH:-/etc/ssl/certs/ssl.crt}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY:-default-master-key}
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY:-default-site-key}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY:-default-secret-key}
      RECAPTCHA_ENABLED: ${RECAPTCHA_ENABLED}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_URL: ${DB_URL}
      RACK_ENV: ${RACK_ENV}
      RAILS_ENV: ${RAILS_ENV}
      DOCKERIZED: ${DOCKERIZED}
      SERVER_MODE: ${SERVER_MODE}
      INTERNAL_PORT: ${INTERNAL_PORT}
      EXTERNAL_PORT: ${EXTERNAL_PORT}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES}

    ports:
    - "${EXTERNAL_PORT}:${INTERNAL_PORT}"
    - "${SSH_PORT:+${SSH_PORT}:${SSH_PORT}}"

    volumes:
      - ./log:/rails/log
      - ./tmp:/rails/tmp
      - ./storage:/rails/storage
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
